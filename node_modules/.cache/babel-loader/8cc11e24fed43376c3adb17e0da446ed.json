{"ast":null,"code":"var _jsxFileName = \"/Users/riri/Desktop/newp3/src/App.js\";\n// import React, { Component } from \"react\";\n// import * as $ from \"jquery\";\n// import { authEndpoint, clientID, redirectURI, scopes } from \"./user-config\";\n// import hash from \"./hash\";\n// import Player from \"./Player\";\n// // this is the react logo  import logo from \"./logo.svg\";\n// import \"./App.css\";\n// // import Aqua from \"./imgs/aqua.png\";\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       token: null,\n//       item: {\n//         album: {\n//           images: [{ url: \"\" }]\n//         },\n//         name: \"\",\n//         artists: [{ name: \"\" }],\n//         duration_ms: 0\n//       },\n//       is_playing: \"Paused\",\n//       progress_ms: 0,\n//       no_data: false,\n//     };\n//     this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n//     this.tick = this.tick.bind(this);\n//   }\n//   componentDidMount() {\n//     // Set token\n//     let _token = hash.access_token;\n//     if (_token) {\n//       // Set token\n//       this.setState({\n//         token: _token\n//       });\n//       this.getCurrentlyPlaying(_token);\n//     }\n//     // set interval for polling every 5 seconds\n//     this.interval = setInterval(() => this.tick(), 5000);\n//   }\n//   componentWillUnmount() {\n//     // clear the interval to save resources\n//     clearInterval(this.interval);\n//   }\n//   tick() {\n//     if(this.state.token) {\n//       this.getCurrentlyPlaying(this.state.token);\n//     }\n//   }\n//   getCurrentlyPlaying(token) {\n//     // Make a call using the token\n//     $.ajax({\n//       url: \"https://api.spotify.com/v1/me/player\",\n//       type: \"GET\",\n//       beforeSend: xhr => {\n//         xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n//       },\n//       success: data => {\n//         // Checks if the data is not empty\n//         if(!data) {\n//           this.setState({\n//             no_data: true,\n//           });\n//           return;\n//         }\n//         this.setState({\n//           item: data.item,\n//           is_playing: data.is_playing,\n//           progress_ms: data.progress_ms,\n//           no_data: false /* We need to \"reset\" the boolean, in case the\n//                             user does not give F5 and has opened his Spotify. */\n//         });\n//       }\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           {/* landing page here, user's will be redirected to login. add logo  */}\n//           {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n//           {!this.state.token && (\n//             <a\n//               className=\"btn btn--loginApp-link\"\n//               href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n//                 \"%20\"\n//               )}&response_type=token&show_dialog=true`}\n//             >\n//               Login to Spotify\n//             </a>\n//           )}\n//           {this.state.token && !this.state.no_data && (\n//             <Player\n//               item={this.state.item}\n//               is_playing={this.state.is_playing}\n//               progress_ms={this.state.progress_ms}\n//             />\n//           )}\n//           {this.state.no_data && (\n//             <p>\n//               {/* <img src={Aqua} className=\"Zodiac-Pic\" alt=\"Aquarius\" /> */}\n//               please select your sign \n//             </p>\n//           )}\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\nimport React, { Component } from 'react';\nimport hash from './hash';\nimport { authEndpoint, clientID, redirectURI, scopes } from \"./user-config\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: \"\",\n      deviceId: \"\",\n      error: \"\",\n      trackName: \"Loading...\",\n      artistName: \"Loading...\",\n      albumName: \"Loading...\",\n      playing: false,\n      albumArt: \"\",\n      sign: \"\"\n    };\n    this.playerCheckInterval = null;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n\n    if (_token) {\n      this.setState({\n        token: _token\n      });\n      this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 1000);\n      console.log(this.state.token);\n    }\n  }\n\n  checkForPlayer() {\n    const {\n      token,\n      sign\n    } = this.state;\n\n    if (window.Spotify !== null && sign) {\n      clearInterval(this.playerCheckInterval);\n      this.player = new window.Spotify.Player({\n        name: \"Song Player\",\n        getOAuthToken: cb => {\n          cb(token);\n        }\n      });\n      this.createEventHandlers();\n      this.player.connect();\n    }\n  }\n\n  createEventHandlers() {\n    this.player.on('initialization_error', e => {\n      console.error(e);\n    });\n    this.player.on('authentication_error', e => {\n      console.error(e);\n    });\n    this.player.on('account_error', e => {\n      console.error(e);\n    });\n    this.player.on('playback_error', e => {\n      console.error(e);\n    });\n    this.player.on('player_state_changed', state => this.onStateChanged(state));\n    this.player.on('ready', async data => {\n      let {\n        device_id\n      } = data;\n      await this.setState({\n        deviceId: device_id\n      });\n      this.transferPlaybackHere();\n    });\n  }\n\n  onStateChanged(state) {\n    if (state !== null) {\n      const {\n        current_track: currentTrack\n      } = state.track_window;\n      const trackName = currentTrack.name;\n      const albumName = currentTrack.album.name;\n      const albumArt = currentTrack.album.images[0].url;\n      const artistName = currentTrack.artists.map(artist => artist.name).join(\", \");\n      const playing = !state.paused;\n      this.setState({\n        trackName,\n        albumName,\n        artistName,\n        playing,\n        albumArt\n      });\n    }\n  }\n\n  onPrevClick() {\n    this.player.previousTrack();\n  }\n\n  onPlayClick() {\n    this.player.togglePlay();\n  }\n\n  onNextClick() {\n    this.player.nextTrack();\n  }\n\n  transferPlaybackHere() {\n    const {\n      deviceId,\n      token,\n      sign\n    } = this.state;\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"context_uri\": mood\n      })\n    });\n  }\n\n  handleChange(event) {\n    if (event.target.value === \"capricorn\") {\n      this.setState({\n        mood: \"spotify:playlist:37i9dQZF1DXdPec7aLTmlC\"\n      }); //Happy Hits Playlist\n    } else if (event.target.value === \"aries\") {\n      this.setState({\n        mood: \"spotify:playlist:37i9dQZF1DX3YSRoSdA634\"\n      }); //Life Sucks Playlist\n    } else {\n      this.setState({\n        mood: \"spotify:playlist:37i9dQZF1DX3ND264N08pv\"\n      }); //Rage Beats Playlist\n    }\n  }\n\n  render() {\n    const {\n      token,\n      error,\n      trackName,\n      artistName,\n      albumName,\n      playing,\n      albumArt,\n      mood\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, \"You have an error! : \", error), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Web-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }\n    }, \"Moon Tunes\"), !mood && token && /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 42\n      }\n    }), \"Select your sign\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"capricorn\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 106\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 111\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"aries\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 102\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 107\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"pisces\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"capricorn\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 106\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 111\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"aries\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 102\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 107\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"pisces\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"capricorn\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 106\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 111\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"aries\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 102\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 107\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"mood\",\n      value: \"pisces\",\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    })), mood && token && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      id: \"loggedIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }\n    }, \"Now Playing\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"album\",\n      alt: \"Loading Album Cover...\",\n      src: albumArt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Artist-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }, \"Artist: \", artistName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, \"Track: \", trackName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, \"Album: \", albumName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onPrevClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onPlayClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }, playing ? \"Pause\" : \"Play\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onNextClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, \"Next\")))), !token && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, \"Authentication\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Token-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"login\",\n      href: `${authEndpoint}client_id=${clientID}&redirect_uri=${redirectURI}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }\n    }, \"Login to Spotify!\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/riri/Desktop/newp3/src/App.js"],"names":["React","Component","hash","authEndpoint","clientID","redirectURI","scopes","App","constructor","props","state","token","deviceId","error","trackName","artistName","albumName","playing","albumArt","sign","playerCheckInterval","handleChange","bind","componentDidMount","_token","access_token","setState","setInterval","checkForPlayer","console","log","window","Spotify","clearInterval","player","Player","name","getOAuthToken","cb","createEventHandlers","connect","on","e","onStateChanged","data","device_id","transferPlaybackHere","current_track","currentTrack","track_window","album","images","url","artists","map","artist","join","paused","onPrevClick","previousTrack","onPlayClick","togglePlay","onNextClick","nextTrack","fetch","method","headers","authorization","body","JSON","stringify","mood","event","target","value","render"],"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","sourcesContent":["// import React, { Component } from \"react\";\n// import * as $ from \"jquery\";\n// import { authEndpoint, clientID, redirectURI, scopes } from \"./user-config\";\n// import hash from \"./hash\";\n// import Player from \"./Player\";\n// // this is the react logo  import logo from \"./logo.svg\";\n// import \"./App.css\";\n// // import Aqua from \"./imgs/aqua.png\";\n\n\n\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       token: null,\n//       item: {\n//         album: {\n//           images: [{ url: \"\" }]\n//         },\n//         name: \"\",\n//         artists: [{ name: \"\" }],\n//         duration_ms: 0\n//       },\n//       is_playing: \"Paused\",\n//       progress_ms: 0,\n//       no_data: false,\n//     };\n\n//     this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n//     this.tick = this.tick.bind(this);\n//   }\n\n\n\n//   componentDidMount() {\n//     // Set token\n//     let _token = hash.access_token;\n\n//     if (_token) {\n//       // Set token\n//       this.setState({\n//         token: _token\n//       });\n//       this.getCurrentlyPlaying(_token);\n//     }\n\n//     // set interval for polling every 5 seconds\n//     this.interval = setInterval(() => this.tick(), 5000);\n//   }\n\n//   componentWillUnmount() {\n//     // clear the interval to save resources\n//     clearInterval(this.interval);\n//   }\n\n//   tick() {\n//     if(this.state.token) {\n//       this.getCurrentlyPlaying(this.state.token);\n//     }\n//   }\n\n\n//   getCurrentlyPlaying(token) {\n//     // Make a call using the token\n//     $.ajax({\n//       url: \"https://api.spotify.com/v1/me/player\",\n//       type: \"GET\",\n//       beforeSend: xhr => {\n//         xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n//       },\n//       success: data => {\n//         // Checks if the data is not empty\n//         if(!data) {\n//           this.setState({\n//             no_data: true,\n//           });\n//           return;\n//         }\n\n//         this.setState({\n//           item: data.item,\n//           is_playing: data.is_playing,\n//           progress_ms: data.progress_ms,\n//           no_data: false /* We need to \"reset\" the boolean, in case the\n//                             user does not give F5 and has opened his Spotify. */\n//         });\n//       }\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           {/* landing page here, user's will be redirected to login. add logo  */}\n//           {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n\n//           {!this.state.token && (\n//             <a\n//               className=\"btn btn--loginApp-link\"\n//               href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n//                 \"%20\"\n//               )}&response_type=token&show_dialog=true`}\n//             >\n//               Login to Spotify\n//             </a>\n//           )}\n//           {this.state.token && !this.state.no_data && (\n//             <Player\n//               item={this.state.item}\n//               is_playing={this.state.is_playing}\n//               progress_ms={this.state.progress_ms}\n//             />\n//           )}\n//           {this.state.no_data && (\n//             <p>\n//               {/* <img src={Aqua} className=\"Zodiac-Pic\" alt=\"Aquarius\" /> */}\n//               please select your sign \n\n//             </p>\n//           )}\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\nimport React, { Component } from 'react';\nimport hash from './hash';\nimport { authEndpoint, clientID, redirectURI, scopes } from \"./user-config\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: \"\",\n      deviceId: \"\",\n      error: \"\",\n      trackName: \"Loading...\",\n      artistName: \"Loading...\",\n      albumName: \"Loading...\",\n      playing: false,\n      albumArt: \"\",\n      sign: \"\",\n    };\n    this.playerCheckInterval = null;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n    if (_token) {\n      this.setState({\n        token: _token\n      });\n      this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 1000);\n      console.log(this.state.token);\n    }\n  }\n\n  checkForPlayer() {\n    const { token, sign } = this.state;\n    if (window.Spotify !== null && sign) {\n      clearInterval(this.playerCheckInterval);\n\n      this.player = new window.Spotify.Player({\n        name: \"Song Player\",\n        getOAuthToken: cb => { cb(token); },\n      });\n      this.createEventHandlers();\n\n      this.player.connect();\n    }\n  }\n\n  createEventHandlers() {\n    this.player.on('initialization_error', e => { console.error(e); });\n    this.player.on('authentication_error', e => {console.error(e);});\n    this.player.on('account_error', e => { console.error(e); });\n    this.player.on('playback_error', e => { console.error(e); });\n\n    this.player.on('player_state_changed', state => this.onStateChanged(state));\n\n    this.player.on('ready', async data => {\n      let { device_id } = data;\n      await this.setState({ deviceId: device_id });\n      this.transferPlaybackHere()\n    });\n  }\n\n  onStateChanged(state) {\n    if (state !== null) {\n      const {\n        current_track: currentTrack,\n      } = state.track_window;\n      const trackName = currentTrack.name;\n      const albumName = currentTrack.album.name;\n      const albumArt = currentTrack.album.images[0].url;\n      const artistName = currentTrack.artists\n          .map(artist => artist.name)\n          .join(\", \");\n      const playing = !state.paused;\n      this.setState({\n        trackName,\n        albumName,\n        artistName,\n        playing,\n        albumArt,\n      });\n    }\n  }\n\n  onPrevClick() {\n    this.player.previousTrack();\n  }\n\n  onPlayClick() {\n    this.player.togglePlay();\n  }\n\n  onNextClick() {\n    this.player.nextTrack();\n  }\n\n  transferPlaybackHere() {\n    const { deviceId, token, sign} = this.state;\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ \"context_uri\": mood}),\n    });\n  }\n\n  handleChange(event) {\n    if (event.target.value === \"capricorn\") {\n      this.setState({mood: \"spotify:playlist:37i9dQZF1DXdPec7aLTmlC\"}); //Happy Hits Playlist\n    } else if (event.target.value === \"aries\") {\n      this.setState({mood: \"spotify:playlist:37i9dQZF1DX3YSRoSdA634\"}); //Life Sucks Playlist\n    } else {\n      this.setState({mood: \"spotify:playlist:37i9dQZF1DX3ND264N08pv\"}); //Rage Beats Playlist\n    }\n  }\n\n  render() {\n    const {\n      token,\n      error,\n      trackName,\n      artistName,\n      albumName,\n      playing,\n      albumArt,\n      mood,\n    } = this.state;\n\n    return (\n        <div className=\"App\">\n          {error && <p>You have an error! : {error}</p> }\n          <div className=\"Web-header\">\n            Moon Tunes\n          </div>\n          {(!mood && token) && (\n              <form>\n                <div className={\"label\"}><br/>Select your sign</div><br/>\n                <input type=\"button\" className={\"mood\"} value={\"capricorn\"} onClick={this.handleChange}/><br/><br/>\n                <input type=\"button\" className={\"mood\"} value={\"aries\"} onClick={this.handleChange}/><br/><br/>\n                <input type=\"button\" className={\"mood\"} value={\"pisces\"} onClick={this.handleChange}/>\n                <input type=\"button\" className={\"mood\"} value={\"capricorn\"} onClick={this.handleChange}/><br/><br/>\n                <input type=\"button\" className={\"mood\"} value={\"aries\"} onClick={this.handleChange}/><br/><br/>\n                <input type=\"button\" className={\"mood\"} value={\"pisces\"} onClick={this.handleChange}/>\n                <input type=\"button\" className={\"mood\"} value={\"capricorn\"} onClick={this.handleChange}/><br/><br/>\n                <input type=\"button\" className={\"mood\"} value={\"aries\"} onClick={this.handleChange}/><br/><br/>\n                <input type=\"button\" className={\"mood\"} value={\"pisces\"} onClick={this.handleChange}/>\n          </form>)}\n          {(mood && token) && (<div>\n            <div className=\"App-header\" id=\"loggedIn\">\n              <h2>Now Playing</h2>\n              <img className=\"album\" alt={\"Loading Album Cover...\"} src={albumArt} />\n            </div>\n            <div className=\"Artist-info\">\n            <p>Artist: {artistName}</p>\n            <p>Track: {trackName}</p>\n            <p>Album: {albumName}</p>\n            <div>\n              <button onClick={() => this.onPrevClick()}>Previous</button>\n              <div className={\"divider\"}/>\n              <button onClick={() => this.onPlayClick()}>{playing ? \"Pause\" : \"Play\"}</button>\n              <div className={\"divider\"}/>\n              <button onClick={() => this.onNextClick()}>Next</button>\n            </div>\n          </div></div>)}\n\n          {(!token) && (<div>\n            <div className=\"App-header\">\n            <h2>Authentication</h2>\n            </div>\n            <div className=\"Token-info\">\n            <a\n            className=\"login\"\n            href={`${authEndpoint}client_id=${clientID}&redirect_uri=${redirectURI}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n            >\n            Login to Spotify!\n            </a>\n            </div></div>)}\n        </div>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}